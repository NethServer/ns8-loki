#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import datetime
import os
import uuid
import agent

rdb = agent.redis_connect()

# Set environment variables
if os.getenv('LOKI_ACTIVE_FROM') is None:
    # This is the most unorthodox way to get the file creation time, which is not even guaranteed to be the same as the time the file was written to disk
    agent.set_env('LOKI_ACTIVE_FROM', datetime.datetime.fromtimestamp(os.stat('environment').st_mtime).astimezone().isoformat())
if os.getenv('LOKI_RETENTION_PERIOD') is None:
    agent.set_env('LOKI_RETENTION_PERIOD', '365')

# Versions before 1.2 need to set new variables for Cloud Log Manager:
if os.getenv('CLOUD_LOG_MANAGER_UUID') is None:
    clm_uuid = str(uuid.uuid5(uuid.NAMESPACE_DNS, rdb.get('cluster/uuid') or str(uuid.uuid4())))
    agent.set_env('CLOUD_LOG_MANAGER_UUID', clm_uuid)
    agent.set_env('CLOUD_LOG_MANAGER_HOSTNAME', 'cluster-' + clm_uuid[:8])

if os.getenv('LOKI_V13_SCHEMA_START') is None:
    # Set the default value for LOKI_V13_SCHEMA_START, which is the day after the current date
    agent.set_env('LOKI_V13_SCHEMA_START', (datetime.date.today() + datetime.timedelta(days=1)).isoformat())
    agent.set_env('LOKI_ALLOW_STRUCTURED_METADATA', 'false') # this could be manually set to true after LOKI_V13_SCHEMA_START date